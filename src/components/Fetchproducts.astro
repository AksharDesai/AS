---
import { fetchProducts } from "../lib/fetchProducts";

// Fetch products dynamically from your Supabase DB
const fetchedProducts = await fetchProducts();
const products = fetchedProducts?.length ? fetchedProducts : [];


---

<section id="FeaturedProducts" class="py-16 bg-neutral-950">
  <div class="container mx-auto px-4 sm:px-6 lg:px-8">
    {/* Section Header */}
    <div class="text-center mb-12">
      <h2
        class="text-3xl sm:text-4xl font-extrabold text-white mb-4 tracking-tight"
      >
        All Featured Products
      </h2>
      <div
        class="w-24 h-1 bg-gradient-to-r from-red-500 to-red-700 mx-auto rounded-full"
      >
      </div>
    </div>

    {/* Product Filters */}
    <div class="flex flex-wrap justify-center gap-4 mb-12">
      <button
        class="filter-btn px-6 py-2 rounded-full bg-gradient-to-r from-red-500 to-red-600 text-white font-semibold text-sm hover:from-red-600 hover:to-red-700 transition-colors duration-300 shadow-md"
        data-category="all"
      >
        All Products
      </button>
      <button
        class="filter-btn px-6 py-2 rounded-full border-2 border-gray-600 text-gray-300 font-semibold text-sm hover:border-red-600 hover:text-red-600 transition-colors duration-300 shadow-md"
        data-category="Kitchen Storage"
      >
        Kitchen Storage
      </button>
      <button
        class="filter-btn px-6 py-2 rounded-full border-2 border-gray-600 text-gray-300 font-semibold text-sm hover:border-red-600 hover:text-red-600 transition-colors duration-300 shadow-md"
        data-category="Wardrobe & Closet"
      >
        Wardrobe & Closet
      </button>
      <button
        class="filter-btn px-6 py-2 rounded-full border-2 border-gray-600 text-gray-300 font-semibold text-sm hover:border-red-600 hover:text-red-600 transition-colors duration-300 shadow-md"
        data-category="Space Saving"
      >
        Space Saving
      </button>
      <button
        class="filter-btn px-6 py-2 rounded-full border-2 border-gray-600 text-gray-300 font-semibold text-sm hover:border-red-600 hover:text-red-600 transition-colors duration-300 shadow-md"
        data-category="General Hardware"
      >
        General Hardware
      </button>
    </div>

 {/* Products Grid */}
<div
id="product-container"
class="grid grid-cols-2 lg:grid-cols-3 gap-8"
>
{
  products.map((product) => (
    <div
      id={product.id}
      class={`product-item searchable-${product.name.toLowerCase().replace(/[^a-z0-9]/g, '')} product-card group relative bg-neutral-800 rounded-xl p-6 transition-all duration-300 hover:shadow-2xl hover:-translate-y-2 flex flex-col justify-between mb-12`}
      data-category={product.category}
    >
      {/* Product Image */}
      <div class="relative aspect-square bg-neutral-700/50 rounded-xl overflow-hidden mb-6">
        <img
          src={`${product.image}`}
          alt={product.name}
          class={`product-image-${product.id} w-full h-full object-cover object-center transition-transform duration-300 group-hover:scale-105`}
        />
      </div>

      {/* Product Details */}
      <h3
        class={`product-name-${product.id} text-xl sm:text-2xl font-bold text-white mb-2`}
      >
        {product.name}
      </h3>

      {/* Product Description */}
      <p
        class={`product-description-${product.id} hidden md:block descDot text-neutral-400 mb-4 text-sm sm:text-base`}
        style="white-space: pre-line;"
      >
        {product.description}
      </p>

      {/* Price & Rating */}
      <div class="hidden md:flex flex-col sm:flex-row justify-between items-start sm:items-center mb-4 gap-2">
        <span
          class={`product-price-${product.id} text-2xl sm:text-3xl font-bold text-red-500`}
        >
          ₹{product.price}
        </span>
      </div>

      {/* Category */}
      <div class="mb-4">
        <span
          class={`product-category-${product.id} text-neutral-400 text-sm sm:text-base`}
        >
          Category: <span class="text-white">{product.category}</span>
        </span>
      </div>

      {/* CTA Button */}
      <button
        value={product.id}
        class="product-button w-full bg-gradient-to-r from-red-500 to-red-600 text-white py-3 rounded-lg hover:from-red-600 hover:to-red-700 transition-colors text-sm sm:text-base shadow-lg"
      >
        Learn More
      </button>
    </div>
  ))
}
</div>


    <div
    id="search-container"
    class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8"
  >
   
  </div>
  </div>
</section>

<!-- Modal Overlay -->
<div
  id="modal-itself"
  class="fixed inset-0 flex items-center justify-center bg-black/90 z-50 hidden "
>
  <!-- Modal Container -->
  <div
    class="modal-container shadow-[0_0_15px_0px_rgba(239,68,68,1)]  bg-neutral-950 rounded-lg w-full sm:max-w-[372px] max-h-[90vh] mx-4 p-6 flex flex-col"
  >
    <!-- Modal Header -->
    <div class="flex justify-between items-center mb-4">

      <h2 class="text-white text-2xl font-bold">Product Details</h2>
      <button
        id="closeModal"
        class="text-white hover:text-red-600 focus:outline-none"
      >
        <!-- Close Icon -->
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"
          />
        </svg>
      </button>
    </div>

    <!-- Modal Body -->
    <div class="flex flex-col flex-grow overflow-hidden">
      <!-- Image Section -->
      <div class="h-64 overflow-hidden rounded-md mb-4">
        <img
          id="modal-image"
          src="https://via.placeholder.com/400x300"
          alt="Product Image"
          class="w-full h-full object-cover"
        />
      </div>

      <!-- Content Section -->
      <div class="flex flex-col flex-grow overflow-y-auto">
        <!-- Product Name -->
        <h3 id="modal-name" class="text-white text-xl font-semibold mb-2">
          Product Name
        </h3>
        <!-- Description -->
        <p id="modal-description" class="text-gray-300 text-sm mb-4" style="white-space: pre-line;">
          This is a brief description of the product. It gives details about
          features and benefits. Lorem ipsum dolor sit amet consectetur adipisicing elit. Eius eaque earum perferendis quibusdam qui commodi deleniti nam dolor aliquam asperiores dignissimos ducimus quae ea dolores suscipit facilis, veritatis praesentium aperiam sit fugiat excepturi similique necessitatibus voluptatibus nemo. Magnam quos a quibusdam, tenetur, architecto optio asperiores ipsam ex quaerat aliquam nam!
        </p>
        <!-- Price and Rating -->
        <div class="flex justify-between items-center mt-auto">
          <span id="modal-price" class="text-white text-lg font-bold">$99.99</span>
          <div class="flex items-center">
            <!-- Star Icon for Rating -->

            <span id="modal-rating" class="text-white text-md ml-1">⭐4.5</span>
          </div>
        </div>
      </div>
    </div>

    <!-- Optional Modal Footer could be added here if needed -->
  </div>
</div>

<style>
  /* Style for the modal when opened */
  .modal-open {
    overflow: hidden;
  }

  /* Keyframes for the fade-in animation */
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  /* Keyframes for the scale-up animation */
  @keyframes scaleUp {
    from {
      transform: scale(0.9);
    }
    to {
      transform: scale(1);
    }
  }

  /* Apply the fade-in animation to the modal overlay */
  #modal-itself.fade-in {
    animation: fadeIn 0.3s ease-in-out forwards;
  }

  /* Apply the scale-up animation to the modal container */
  .modal-container.scale-up {
    animation: scaleUp 0.3s ease-in-out forwards;
  }
</style>

<script is:inline>
  const learnMoreBtns = document.querySelectorAll(".product-button");

  const productModal = document.getElementById("modal-itself");
  const closeModal = document.getElementById("closeModal");
  const modalImg = document.getElementById("modal-image");
  const modalName = document.getElementById("modal-name");
  const modalDescription = document.getElementById("modal-description");
  const modalPrice = document.getElementById("modal-price");
  const modalRating = document.getElementById("modal-rating");
  const modalContainer = document.querySelector(".modal-container");

  closeModal.addEventListener("click", function (e) {
    productModal.classList.add("hidden");
    document.body.classList.remove("overflow-hidden");
    productModal.classList.remove("fade-in"); // Remove fade-in class
    modalContainer.classList.remove("scale-up"); // Remove scale-up class
  });

  learnMoreBtns.forEach((btn) => {
    btn.addEventListener("click", function (e) {
      const productID = e.target.value;

     

      const image = document.querySelector(`.product-image-${productID}`);
      const name = document.querySelector(`.product-name-${productID}`);
      const description = document.querySelector(
        `.product-description-${productID}`
      );
      const price = document.querySelector(`.product-price-${productID}`);
      const category = document.querySelector(`.product-category-${productID}`);

      //<=============== populating the modal with product details ==============>
      productModal.classList.remove("hidden");
      document.body.classList.add("overflow-hidden");
      modalImg.src = image.src;
      modalName.textContent = name.textContent;
      modalDescription.innerHTML = description.innerHTML.replace(/-/g, '<span class="text-red-500">•</span>');

      modalPrice.textContent = price.textContent;

      productModal.classList.add("fade-in"); // Add fade-in class
      modalContainer.classList.add("scale-up"); // Add scale-up class
    });
  });

  document.addEventListener("DOMContentLoaded", function () {
     // Check if the script is running

    const filterButtons = document.querySelectorAll(".filter-btn");
    const productCards = document.querySelectorAll(".product-card");

    filterButtons.forEach((button) => {
      button.addEventListener("click", function () {
        const selectedCategory = this.getAttribute("data-category");

        // Remove active class from all buttons
        filterButtons.forEach((btn) => {
          btn.classList.remove(
            "bg-gradient-to-r",
            "from-red-500",
            "to-red-600",
            "text-white"
          );
          btn.classList.add(
            "border-2",
            "border-gray-600",
            "text-gray-300",
            "hover:border-red-600",
            "hover:text-red-600"
          );
        });

        // Add active class to the selected button
        this.classList.add(
          "bg-gradient-to-r",
          "from-red-500",
          "to-red-600",
          "text-white"
        );
        this.classList.remove(
          "border-2",
          "border-gray-600",
          "text-gray-300",
          "hover:border-red-600",
          "hover:text-red-600"
        );

        // Filter product cards
        productCards.forEach((card) => {
          if (
            selectedCategory === "all" ||
            card.getAttribute("data-category") === selectedCategory
          ) {
            card.style.display = "block"; // Show product
          } else {
            card.style.display = "none"; // Hide product
          }
        });
      });
    });
  });



  // Get all product descriptions and replace dashes with red dots

</script>