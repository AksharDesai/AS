---
import { fetchProducts } from "../lib/fetchProducts";

// Fetch products dynamically from your Supabase DB
const fetchedProducts = await fetchProducts();
const products = fetchedProducts?.length ? fetchedProducts : [];
---

<style>
  /* Container styling */
  .swiper-container {
    position: relative;
    width: 340px;
    height: 420px;
    perspective: 1000px; /* For 3D effect */
    margin: 0 auto;
  }

  img{

    width: 100% !important;
    height: 100% !important;
    object-fit:fill !important;
    object-position: center !important;
  }

  /* Card styling */
  .card {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 18px;
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #fff;
    font-size: 22px;
    font-weight: bold;
    user-select: none;
    cursor: pointer;
    /* Smooth transitions */
    transition: transform 0.3s ease-out, opacity 0.3s ease-out;
  }

  /* Inactive card style */
  .card.inactive {
    opacity: 1;
  }

  /* Shadow for cards behind the active one */
  .card:not(:last-child) {
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  }

  /* Navigation buttons styling */
  .nav-buttons {
    display: flex;
    justify-content: center;
    margin-top: 20px;
    gap: 10px;
  }


</style>

<div class="swiper-container">
  {
    products.map((product, index) => (
      <div class="card overflow-hidden border-4 border-neutral-700">
        <img
          class=""
          src={`${product.image}`}
          draggable="false"
          loading="lazy"
          decoding="async"
          alt={`${product.name}`}
        />
      </div>
    ))
  }
</div>

<div class="nav-buttons rounded-md overflow-hidden  ">
  <button id="prev-btn" class="bg-black text-white py-2 px-4   text-xl">< </button>
  <button id="next-btn" class=" bg-red-500 text-white px-4 py-2  border-white  text-xl">></button>
</div>

<script is:inline>
  const container = document.querySelector('.swiper-container');
  const prevBtn = document.getElementById('prev-btn');
  const nextBtn = document.getElementById('next-btn');
  const cards = Array.from(container.querySelectorAll('.card'));

  // Set current index (active card is on top)
  let currentIndex = cards.length - 1;

  // Initialize positions for each card
  const initCards = () => {
    cards.forEach((card, index) => {
      if (index === currentIndex) {
        card.style.transform = 'none';
        card.style.opacity = 1;
        card.classList.remove('inactive');
      } else {
        // Cards behind the active one are slightly pushed back
        card.style.transform = 'translate3d(0, 0, -400px)';
        card.style.opacity = 1;
        card.classList.add('inactive');
      }
    });
  };

  initCards();

  // Animate the current card off-screen to the right (Next)
  const nextCard = () => {
    if (currentIndex === 0) {
      console.log("Reached the end of the products.");
      return;
    }
    const currentCard = cards[currentIndex];
    currentCard.style.transform = 'translate3d(100%, 0, 0)';
    currentCard.style.opacity = 0;
    currentCard.classList.add('inactive');

    setTimeout(() => {
      currentIndex--;
      const newCurrent = cards[currentIndex];
      newCurrent.style.transform = 'none';
      newCurrent.style.opacity = 1;
      newCurrent.classList.remove('inactive');
    }, 300);
  };

  // Animate the previous card back into view (Previous)
  const prevCard = () => {
    if (currentIndex === cards.length - 1) {
      console.log("Already at the first product.");
      return;
    }
    const previousCard = cards[currentIndex + 1];
    previousCard.style.transform = 'translate3d(-100%, 0, 0)';
    previousCard.style.opacity = 0;
    previousCard.classList.add('inactive');

    // Force a reflow to ensure the starting position is applied
    previousCard.getBoundingClientRect();

    previousCard.style.transform = 'none';
    previousCard.style.opacity = 1;
    previousCard.classList.remove('inactive');
    currentIndex++;
  };

  nextBtn.addEventListener('click', nextCard);
  prevBtn.addEventListener('click', prevCard);
</script>
